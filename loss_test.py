# -*- coding: utf-8 -*-
# @Time : 2023/3/16 16:15
# @Author : Jclian91
# @File : loss_test.py
# @Place : Minghang, Shanghai
# 计算交叉熵
import torch as T
from torch.nn import CrossEntropyLoss


y_pred = T.tensor([[0.1284, 0.2558, 0.1605, 0.1996, 0.2558],
            [0.0862, 0.5130, 0.1596, 0.1596, 0.0816],
            [0.1660, 0.3475, 0.1546, 0.1660, 0.1660],
            [0.1590, 0.3357, 0.1711, 0.1590, 0.1752],
            [0.1806, 0.2439, 0.1965, 0.1710, 0.2080],
            [0.0829, 0.4011, 0.2747, 0.0835, 0.1578],
            [0.0941, 0.3472, 0.1862, 0.1862, 0.1862],
            [0.1805, 0.3514, 0.1889, 0.1805, 0.0988],
            [0.1033, 0.2437, 0.1869, 0.3867, 0.0794],
            [0.0842, 0.3776, 0.2178, 0.1281, 0.1923],
            [0.1056, 0.2591, 0.2578, 0.1221, 0.2554],
            [0.1033, 0.3666, 0.2276, 0.1673, 0.1351],
            [0.1589, 0.3697, 0.1229, 0.1589, 0.1896],
            [0.0649, 0.2443, 0.1691, 0.3504, 0.1713],
            [0.0848, 0.3260, 0.2151, 0.1981, 0.1759],
            [0.1228, 0.2516, 0.3066, 0.1181, 0.2008],
            [0.1059, 0.2470, 0.1904, 0.2437, 0.2130],
            [0.1994, 0.1994, 0.2587, 0.1432, 0.1994],
            [0.0980, 0.2940, 0.2374, 0.1414, 0.2293],
            [0.0556, 0.4479, 0.1655, 0.1655, 0.1655],
            [0.1819, 0.3327, 0.1594, 0.1808, 0.1453],
            [0.1567, 0.3112, 0.2285, 0.0960, 0.2076],
            [0.0723, 0.3619, 0.2218, 0.2126, 0.1313],
            [0.2881, 0.2881, 0.2094, 0.1181, 0.0964],
            [0.1359, 0.3374, 0.3159, 0.1133, 0.0975],
            [0.0721, 0.3838, 0.2495, 0.1129, 0.1816],
            [0.0681, 0.5397, 0.1968, 0.0884, 0.1070],
            [0.0800, 0.2028, 0.1853, 0.2977, 0.2342],
            [0.0848, 0.3759, 0.2014, 0.1828, 0.1551],
            [0.0639, 0.4432, 0.1951, 0.1027, 0.1951],
            [0.0859, 0.4279, 0.2163, 0.0740, 0.1960],
            [0.0989, 0.2853, 0.2586, 0.1476, 0.2096]]
            )

y_true = T.tensor([0, 1, 1, 3, 1, 1, 2, 0, 1, 0, 3, 1, 4, 3, 1, 1, 4, 4, 3, 2, 4, 2, 3, 0, 4, 1, 4, 0, 4, 1, 1, 1])
print(y_pred.size())
print(y_true.size())

print(CrossEntropyLoss()(y_pred, y_true))